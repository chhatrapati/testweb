{"version":3,"sources":["./src/app/views/contact-us/contact-us.component.html","./src/app/core/helpers/form-helper.ts","./src/app/services/system.service.ts","./src/app/views/contact-us/contact-us.component.scss","./src/app/views/contact-us/contact-us.component.ts","./src/app/views/contact-us/contact-us.config.ts","./src/app/views/contact-us/contact-us.module.ts","./src/app/views/contact-us/contact-us.routing.ts"],"names":[],"mappings":"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","file":"views-contact-us-contact-us-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"contact-us\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n            <div class=\\\"col-lg-6\\\">\\n                <div>\\n                    <h3 class=\\\"typography-heading-level-3-web charcoal-grey mb-4\\\">\\n                        Contact Us\\n                    </h3>\\n                    <form [formGroup]=\\\"contactUsForm\\\" (ngSubmit)=\\\"submit(model)\\\">\\n                        <formly-form [form]=\\\"contactUsForm\\\" [fields]=\\\"fields\\\" [model]=\\\"model\\\">\\n                            <div class=\\\"form-actions d-flex justify-content-end\\\">\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!contactUsForm.valid\\\" class=\\\"btn btn-secondary d-inline-block w-100 mt-3\\\">\\n                                    Send\\n                                </button>\\n                            </div>\\n                        </formly-form>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { FormGroup } from '@angular/forms';\n\nexport function resetForm(form: FormGroup): void {\n    Object.keys(form.controls).forEach(key => {\n        const control = form.get(key);\n        control.reset();\n        control.markAsPristine();\n        control.markAsUntouched();\n        control.markAsPending();\n\n        if (control instanceof FormGroup) {\n            resetForm(control);\n        }\n    });\n}\n\nexport function getCurrentYearLastDigits(): number {\n    const fullYear = new Date().getFullYear().toString();\n    const lastDigits = fullYear.slice(fullYear.length - 2);\n    return parseInt(lastDigits, 10);\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { API_URL_TOKEN } from '../libs/tokens';\nimport { ResponseModel } from '../models/response/response';\nimport { ContactUsFormModel } from '../views/contact-us/contact-us.model';\n\ninterface ContactResponse {\n    readonly message: string;\n}\n\n@Injectable()\nexport class SystemService {\n    private readonly endpoint = '/system/contact-us';\n\n    constructor(@Inject(API_URL_TOKEN) private readonly apiUrl: string,\n                private readonly httpClient: HttpClient) {\n    }\n\n    private get apiEndpoint() {\n        return [this.apiUrl, this.endpoint].join('');\n    }\n\n    postContactForm(payload: ContactUsFormModel): Observable<string> {\n        return this.httpClient\n            .post<ResponseModel<ContactResponse>>(this.apiEndpoint, payload)\n            .pipe(map((data: ResponseModel<ContactResponse>) => data.data.message));\n    }\n}\n","module.exports = \".contact-us {\\n  margin-top: 60px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VjMi11c2VyL3Bhbm5vdGF0aW9uLWZyb250LWVuZC9zcmMvYXBwL3ZpZXdzL2NvbnRhY3QtdXMvY29udGFjdC11cy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3MvY29udGFjdC11cy9jb250YWN0LXVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbnRhY3QtdXMvY29udGFjdC11cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWN0LXVzIHtcbiAgICBtYXJnaW4tdG9wOiA2MHB4O1xufVxuIiwiLmNvbnRhY3QtdXMge1xuICBtYXJnaW4tdG9wOiA2MHB4O1xufSJdfQ== */\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ContactUsFormModel } from './contact-us.model';\nimport { getFields, getModel } from './contact-us.config';\nimport { SystemService } from '../../services/system.service';\nimport { resetForm } from '../../core/helpers/form-helper';\n\n@Component({\n    selector: 'app-contact-us',\n    templateUrl: './contact-us.component.html',\n    styleUrls: ['./contact-us.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactUsComponent {\n    contactUsForm: FormGroup;\n    model: ContactUsFormModel;\n    fields: FormlyFieldConfig[];\n\n    constructor(private readonly toasterService: ToasterService,\n                private readonly changeDetectionRef: ChangeDetectorRef,\n                private readonly systemService: SystemService,\n                private readonly translationService: TranslateService) {\n        this.initForm();\n    }\n\n    submit(form: ContactUsFormModel) {\n        this.systemService.postContactForm(form)\n            .subscribe((message: string) => {\n                this.toasterService.pop('success', message);\n                resetForm(this.contactUsForm);\n                this.changeDetectionRef.detectChanges();\n            });\n    }\n\n    private initForm(): void {\n        this.contactUsForm = new FormGroup({});\n        this.model = getModel();\n        this.fields = getFields(this.translationService);\n    }\n}\n","import { TranslateService } from '@ngx-translate/core';\n\nimport { invalidEmailMessage, requiredFieldMessage } from '../../validation';\nimport { EMAIL_PATTERN } from '../../app.constants';\n\nexport function getFields(translator: TranslateService) {\n    return [\n        {\n            key: 'firstName',\n            type: 'input',\n            className: 'auth-field',\n            templateOptions: {\n                type: 'text',\n                name: 'firstName',\n                label: 'First Name',\n                placeholder: 'Enter your first name',\n                minLength: 1,\n                maxLength: 50,\n                required: true,\n                hideRequiredMarker: true,\n            },\n            validators: {\n                required: (ctrl) => ctrl.value && !!ctrl.value.trim().length\n            },\n            validation: {\n                messages: {\n                    minlength: () => translator.instant('Validation.Common.NameRequired'),\n                    maxlength: () => translator.instant('Validation.Common.NameLength')\n                }\n            }\n        },\n        {\n            key: 'lastName',\n            type: 'input',\n            className: 'auth-field',\n            templateOptions: {\n                type: 'lastName',\n                label: 'Last name',\n                placeholder: 'Enter your last name',\n                minLength: 1,\n                maxLength: 50,\n                required: true,\n                hideRequiredMarker: true,\n            },\n            validators: {\n                required: (ctrl) => ctrl.value && !!ctrl.value.trim().length\n            },\n            validation: {\n                messages: {\n                    minlength: () => translator.instant('Validation.Common.SurnameRequired'),\n                    maxlength: () => translator.instant('Validation.Common.NameLength')\n                }\n            }\n        },\n        {\n            key: 'email',\n            type: 'input',\n            className: 'auth-field',\n            templateOptions: {\n                type: 'email',\n                label: 'Email',\n                maxLength: 129,\n                placeholder: 'Enter your email',\n                required: true,\n                hideRequiredMarker: true,\n            },\n            validators: {\n                email: (ctrl) => EMAIL_PATTERN.test(ctrl.value)\n            },\n            expressionProperties: {\n                'templateOptions.label': () => translator.instant('SignIn.Form.EmailLabel'),\n                'templateOptions.placeholder': () => translator.instant('SignIn.Form.EmailPlaceholder')\n            },\n            validation: {\n                messages: {\n                    required: requiredFieldMessage(translator),\n                    email: invalidEmailMessage(translator)\n                }\n            }\n        },\n        {\n            key: 'subject',\n            type: 'input',\n            className: 'auth-field',\n            templateOptions: {\n                type: 'text',\n                name: 'subject',\n                label: 'Subject',\n                maxLength: 50,\n                placeholder: 'Enter subject',\n                required: true,\n                hideRequiredMarker: true,\n            },\n            validators: {\n                required: (ctrl) => ctrl.value && !!ctrl.value.trim().length\n            }\n        },\n        {\n            key: 'message',\n            type: 'textarea',\n            className: 'auth-field',\n            templateOptions: {\n                name: 'message',\n                label: 'Message',\n                placeholder: 'Enter message',\n                required: true,\n                maxLength: 750,\n                hideRequiredMarker: true,\n                grow: false,\n                rows: 6\n            },\n            validators: {\n                required: (ctrl) => ctrl.value && !!ctrl.value.trim().length\n            }\n        },\n    ];\n}\n\nexport function getModel() {\n    return {\n        firstName: '',\n        lastName: '',\n        email: '',\n        subject: '',\n        message: ''\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { ContactUsComponent } from './contact-us.component';\nimport { ContactUsRoutes } from './contact-us.routing';\nimport { SystemService } from '../../services/system.service';\n\n@NgModule({\n    declarations: [ContactUsComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ContactUsRoutes),\n        ReactiveFormsModule,\n        FormlyModule.forRoot({\n            validationMessages: [\n                { name: 'required', message: 'This field is required' },\n            ],\n        }),\n        FormsModule,\n        FormlyBootstrapModule,\n    ],\n    providers: [SystemService]\n})\nexport class ContactUsModule {\n}\n","import { Route } from '@angular/router';\n\nimport { ContactUsComponent } from './contact-us.component';\n\nexport const ContactUsRoutes: Route[] = [\n    {\n        path: '',\n        component: ContactUsComponent,\n    }\n];\n"],"sourceRoot":"webpack:///"}